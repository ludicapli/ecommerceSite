{"version":3,"file":"index-f9a0eef1.js","sources":["../../src/desk/panes/list/ListPane.tsx"],"sourcesContent":["import React from 'react'\nimport {Box, Button, Card, Code, Stack} from '@sanity/ui'\nimport styled from 'styled-components'\nimport {ArrowLeftIcon} from '@sanity/icons'\nimport {PaneListItem} from '../../types'\nimport {\n  Pane,\n  PaneContent,\n  PaneHeader,\n  usePaneLayout,\n  PaneHeaderActions,\n  BackLink,\n  PaneItem,\n} from '../../components'\nimport {BaseDeskToolPaneProps} from '../types'\nimport {_DEBUG} from '../../constants'\nimport {useDeskTool} from '../../useDeskTool'\n\ntype ListPaneProps = BaseDeskToolPaneProps<'list'>\n\nconst Divider = styled.hr`\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups, title} = pane\n  const paneShowIcons = displayOptions?.showIcons\n\n  const shouldShowIconForItem = (item: PaneListItem): boolean => {\n    const itemShowIcon = item.displayOptions?.showIcon\n\n    // Specific true/false on item should have precedence over list setting\n    if (typeof itemShowIcon !== 'undefined') {\n      return itemShowIcon !== false // Boolean(item.icon)\n    }\n\n    // If no item setting is defined, defer to the pane settings\n    return paneShowIcons !== false // Boolean(item.icon)\n  }\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"desk-tool-list-pane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <PaneHeader\n        actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        title={title}\n      />\n\n      <PaneContent overflow={layoutCollapsed ? undefined : 'auto'}>\n        <Stack padding={2} space={1}>\n          {items &&\n            items.map((item, itemIndex) => {\n              if (item.type === 'divider') {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <Box key={`divider-${itemIndex}`} paddingY={1}>\n                    <Divider />\n                  </Box>\n                )\n              }\n\n              const pressed = !isActive && childItemId === item.id\n              const selected = isActive && childItemId === item.id\n\n              return (\n                <PaneItem\n                  icon={shouldShowIconForItem(item) ? item.icon : false}\n                  id={item.id}\n                  key={item.id}\n                  layout={defaultLayout}\n                  pressed={pressed}\n                  schemaType={item.schemaType}\n                  selected={selected}\n                  title={item.title}\n                  value={\n                    // If this is a document list item, pass on the ID and type,\n                    // otherwise leave it undefined to use the passed title and gang\n                    item._id && item.schemaType\n                      ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n                      : undefined\n                  }\n                />\n              )\n            })}\n        </Stack>\n      </PaneContent>\n    </Pane>\n  )\n}\n"],"names":["Divider","styled","default","hr","_templateObject","_taggedTemplateLiteral","ListPane","props","childItemId","index","isActive","isSelected","pane","paneKey","features","useDeskTool","collapsed","layoutCollapsed","usePaneLayout","defaultLayout","displayOptions","items","menuItems","menuItemGroups","title","paneShowIcons","showIcons","shouldShowIconForItem","item","_a","itemShowIcon","showIcon","jsxs","Pane","currentMaxWidth","id","maxWidth","minWidth","selected","children","_DEBUG","jsx","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","icon","ArrowLeftIcon","mode","PaneContent","overflow","Stack","padding","space","map","itemIndex","type","Box","paddingY","concat","pressed","PaneItem","layout","schemaType","value","_id","_type","name"],"mappings":"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"}